{"version":3,"sources":["neural/matrix.js","neural/nn.js","App.js","serviceWorker.js","index.js"],"names":["Matrix","rows","cols","this","data","Array","fill","map","m","i","j","arr","push","e","Math","random","n","console","log","func","val","table","JSON","stringify","length","a","b","_","matrix","sum","k","parse","ActivationFunction","dfunc","sigmoid","x","exp","y","NeuralNetwork","tanh","in_nodes","hid_nodes","out_nodes","input_nodes","hidden_nodes","output_nodes","weights_ih","copy","weights_ho","bias_h","bias_o","randomize","setLearningRate","setActivationFunction","input_array","inputs","fromArray","hidden","multiply","add","activation_function","output","toArray","learning_rate","target_array","outputs","targets","output_errors","subtract","gradients","hidden_T","transpose","weight_ho_deltas","who_t","hidden_errors","hidden_gradient","inputs_T","weight_ih_deltas","nn","deserialize","TOTAL_BIRDS","HEIGHT","WIDTH","PIPE_WIDTH","MIN_PIPE_HEIGHT","FPS","Bird","ctx","brain","update","pipeX","spaceStartY","spaceEndY","age","gravity","velocity","min","think","abs","predict","jump","mutate","isDead","fitness","img","document","getElementById","drawImage","Pipe","height","space","width","fillRect","fillStyle","App","props","startGame","canvasRef","current","getContext","frameCount","clearInterval","loop","clearRect","pipes","generatePipes","birds","generateBirds","deadBirds","setInterval","gameloop","state","gameSpeed","onKeyDown","code","getCtx","firstPipe","secondPipeHeight","pickOne","newBird","draw","forEach","pipe","bird","nextPipe","getNextPipe","filter","updateBirdDeadState","totalAge","deadBird","index","r","React","createRef","className","ref","style","marginTop","border","id","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAAaA,G,MAAb,WACE,WAAYC,EAAMC,GAAO,IAAD,2BACtBC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EACZC,KAAKC,KAAOC,MAAMF,KAAKF,MAAMK,OAAOC,KAAI,kBAAMF,MAAM,EAAKH,MAAMI,KAAK,MAJxE,mDASI,IADA,IAAIE,EAAI,IAAIR,EAAOG,KAAKF,KAAME,KAAKD,MAC1BO,EAAI,EAAGA,EAAIN,KAAKF,KAAMQ,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,KAAKD,KAAMQ,IAC7BF,EAAEJ,KAAKK,GAAGC,GAAKP,KAAKC,KAAKK,GAAGC,GAGhC,OAAOF,IAdX,gCAkCI,IADA,IAAIG,EAAM,GACDF,EAAI,EAAGA,EAAIN,KAAKF,KAAMQ,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,KAAKD,KAAMQ,IAC7BC,EAAIC,KAAKT,KAAKC,KAAKK,GAAGC,IAG1B,OAAOC,IAvCX,kCA2CI,OAAOR,KAAKI,KAAI,SAAAM,GAAC,OAAoB,EAAhBC,KAAKC,SAAe,OA3C7C,0BA8CMC,GACF,OAAIA,aAAahB,EACXG,KAAKF,OAASe,EAAEf,MAAQE,KAAKD,OAASc,EAAEd,UAC1Ce,QAAQC,IAAI,2DAGPf,KAAKI,KAAI,SAACM,EAAGJ,EAAGC,GAAP,OAAaG,EAAIG,EAAEZ,KAAKK,GAAGC,MAEpCP,KAAKI,KAAI,SAAAM,GAAC,OAAIA,EAAIG,OAtD/B,+BAiFWA,GACP,OAAIA,aAAahB,EACXG,KAAKF,OAASe,EAAEf,MAAQE,KAAKD,OAASc,EAAEd,UAC1Ce,QAAQC,IAAI,2DAKPf,KAAKI,KAAI,SAACM,EAAGJ,EAAGC,GAAP,OAAaG,EAAIG,EAAEZ,KAAKK,GAAGC,MAGpCP,KAAKI,KAAI,SAAAM,GAAC,OAAIA,EAAIG,OA5F/B,0BAgGMG,GAEF,IAAK,IAAIV,EAAI,EAAGA,EAAIN,KAAKF,KAAMQ,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,KAAKD,KAAMQ,IAAK,CAClC,IAAIU,EAAMjB,KAAKC,KAAKK,GAAGC,GACvBP,KAAKC,KAAKK,GAAGC,GAAKS,EAAKC,EAAKX,EAAGC,GAGnC,OAAOP,OAxGX,8BAmHI,OADAc,QAAQI,MAAMlB,KAAKC,MACZD,OAnHX,kCAuHI,OAAOmB,KAAKC,UAAUpB,SAvH1B,iCAiBmBQ,GACf,OAAO,IAAIX,EAAOW,EAAIa,OAAQ,GAAGjB,KAAI,SAACM,EAAGJ,GAAJ,OAAUE,EAAIF,QAlBvD,+BAqBkBgB,EAAGC,GACjB,GAAID,EAAExB,OAASyB,EAAEzB,MAAQwB,EAAEvB,OAASwB,EAAExB,KAMtC,OAAO,IAAIF,EAAOyB,EAAExB,KAAMwB,EAAEvB,MACzBK,KAAI,SAACoB,EAAGlB,EAAGC,GAAP,OAAae,EAAErB,KAAKK,GAAGC,GAAKgB,EAAEtB,KAAKK,GAAGC,MAN3CO,QAAQC,IAAI,6DAvBlB,gCA0DmBU,GACf,OAAO,IAAI5B,EAAO4B,EAAO1B,KAAM0B,EAAO3B,MACnCM,KAAI,SAACoB,EAAGlB,EAAGC,GAAP,OAAakB,EAAOxB,KAAKM,GAAGD,QA5DvC,+BA+DkBgB,EAAGC,GAEjB,GAAID,EAAEvB,OAASwB,EAAEzB,KAKjB,OAAO,IAAID,EAAOyB,EAAExB,KAAMyB,EAAExB,MACzBK,KAAI,SAACM,EAAGJ,EAAGC,GAGV,IADA,IAAImB,EAAM,EACDC,EAAI,EAAGA,EAAIL,EAAEvB,KAAM4B,IAC1BD,GAAOJ,EAAErB,KAAKK,GAAGqB,GAAKJ,EAAEtB,KAAK0B,GAAGpB,GAElC,OAAOmB,KAXTZ,QAAQC,IAAI,wCAlElB,0BA2GaU,EAAQT,GAEjB,OAAO,IAAInB,EAAO4B,EAAO3B,KAAM2B,EAAO1B,MACnCK,KAAI,SAACM,EAAGJ,EAAGC,GAAP,OAAaS,EAAKS,EAAOxB,KAAKK,GAAGC,GAAID,EAAGC,QA9GnD,kCA0HqBN,GACE,iBAARA,IACTA,EAAOkB,KAAKS,MAAM3B,IAEpB,IAAIwB,EAAS,IAAI5B,EAAOI,EAAKH,KAAMG,EAAKF,MAExC,OADA0B,EAAOxB,KAAOA,EAAKA,KACZwB,MAhIX,MCCMI,EACJ,WAAYb,EAAMc,GAAQ,oBACxB9B,KAAKgB,KAAOA,EACZhB,KAAK8B,MAAQA,GAIbC,EAAU,IAAIF,GAChB,SAAAG,GAAC,OAAI,GAAK,EAAIrB,KAAKsB,KAAKD,OACxB,SAAAE,GAAC,OAAIA,GAAK,EAAIA,MASHC,GANF,IAAIN,GACb,SAAAG,GAAC,OAAIrB,KAAKyB,KAAKJ,MACf,SAAAE,GAAC,OAAI,EAAKA,EAAIA,KAIhB,WAKE,WAAYG,EAAUC,EAAWC,GAC/B,GAD2C,oBACvCF,aAAoBF,EAAe,CACrC,IAAIb,EAAIe,EACRrC,KAAKwC,YAAclB,EAAEkB,YACrBxC,KAAKyC,aAAenB,EAAEmB,aACtBzC,KAAK0C,aAAepB,EAAEoB,aAEtB1C,KAAK2C,WAAarB,EAAEqB,WAAWC,OAC/B5C,KAAK6C,WAAavB,EAAEuB,WAAWD,OAE/B5C,KAAK8C,OAASxB,EAAEwB,OAAOF,OACvB5C,KAAK+C,OAASzB,EAAEyB,OAAOH,YAEvB5C,KAAKwC,YAAcH,EACnBrC,KAAKyC,aAAeH,EACpBtC,KAAK0C,aAAeH,EAEpBvC,KAAK2C,WAAa,IAAI9C,EAAOG,KAAKyC,aAAczC,KAAKwC,aACrDxC,KAAK6C,WAAa,IAAIhD,EAAOG,KAAK0C,aAAc1C,KAAKyC,cACrDzC,KAAK2C,WAAWK,YAChBhD,KAAK6C,WAAWG,YAEhBhD,KAAK8C,OAAS,IAAIjD,EAAOG,KAAKyC,aAAc,GAC5CzC,KAAK+C,OAAS,IAAIlD,EAAOG,KAAK0C,aAAc,GAC5C1C,KAAK8C,OAAOE,YACZhD,KAAK+C,OAAOC,YAIdhD,KAAKiD,kBACLjD,KAAKkD,wBAnCT,oDAwCUC,GAGN,IAAIC,EAASvD,EAAOwD,UAAUF,GAC1BG,EAASzD,EAAO0D,SAASvD,KAAK2C,WAAYS,GAC9CE,EAAOE,IAAIxD,KAAK8C,QAEhBQ,EAAOlD,IAAIJ,KAAKyD,oBAAoBzC,MAGpC,IAAI0C,EAAS7D,EAAO0D,SAASvD,KAAK6C,WAAYS,GAK9C,OAJAI,EAAOF,IAAIxD,KAAK+C,QAChBW,EAAOtD,IAAIJ,KAAKyD,oBAAoBzC,MAG7B0C,EAAOC,YAvDlB,wCA0DwC,IAAtBC,EAAqB,uDAAL,GAC9B5D,KAAK4D,cAAgBA,IA3DzB,8CA8DyC,IAAjB5C,EAAgB,uDAATe,EAC3B/B,KAAKyD,oBAAsBzC,IA/D/B,4BAkEQmC,EAAaU,GAEjB,IAAIT,EAASvD,EAAOwD,UAAUF,GAC1BG,EAASzD,EAAO0D,SAASvD,KAAK2C,WAAYS,GAC9CE,EAAOE,IAAIxD,KAAK8C,QAEhBQ,EAAOlD,IAAIJ,KAAKyD,oBAAoBzC,MAGpC,IAAI8C,EAAUjE,EAAO0D,SAASvD,KAAK6C,WAAYS,GAC/CQ,EAAQN,IAAIxD,KAAK+C,QACjBe,EAAQ1D,IAAIJ,KAAKyD,oBAAoBzC,MAGrC,IAAI+C,EAAUlE,EAAOwD,UAAUQ,GAI3BG,EAAgBnE,EAAOoE,SAASF,EAASD,GAIzCI,EAAYrE,EAAOO,IAAI0D,EAAS9D,KAAKyD,oBAAoB3B,OAC7DoC,EAAUX,SAASS,GACnBE,EAAUX,SAASvD,KAAK4D,eAIxB,IAAIO,EAAWtE,EAAOuE,UAAUd,GAC5Be,EAAmBxE,EAAO0D,SAASW,EAAWC,GAGlDnE,KAAK6C,WAAWW,IAAIa,GAEpBrE,KAAK+C,OAAOS,IAAIU,GAGhB,IAAII,EAAQzE,EAAOuE,UAAUpE,KAAK6C,YAC9B0B,EAAgB1E,EAAO0D,SAASe,EAAON,GAGvCQ,EAAkB3E,EAAOO,IAAIkD,EAAQtD,KAAKyD,oBAAoB3B,OAClE0C,EAAgBjB,SAASgB,GACzBC,EAAgBjB,SAASvD,KAAK4D,eAG9B,IAAIa,EAAW5E,EAAOuE,UAAUhB,GAC5BsB,EAAmB7E,EAAO0D,SAASiB,EAAiBC,GAExDzE,KAAK2C,WAAWa,IAAIkB,GAEpB1E,KAAK8C,OAAOU,IAAIgB,KArHpB,kCA6HI,OAAOrD,KAAKC,UAAUpB,QA7H1B,6BAgJI,OAAO,IAAImC,EAAcnC,QAhJ7B,6BAoJSgB,GACLhB,KAAK2C,WAAWvC,IAAIY,GACpBhB,KAAK6C,WAAWzC,IAAIY,GACpBhB,KAAK8C,OAAO1C,IAAIY,GAChBhB,KAAK+C,OAAO3C,IAAIY,MAxJpB,mCAgIqBf,GACE,iBAARA,IACTA,EAAOkB,KAAKS,MAAM3B,IAEpB,IAAI0E,EAAK,IAAIxC,EAAclC,EAAKuC,YAAavC,EAAKwC,aAAcxC,EAAKyC,cAMrE,OALAiC,EAAGhC,WAAa9C,EAAO+E,YAAY3E,EAAK0C,YACxCgC,EAAG9B,WAAahD,EAAO+E,YAAY3E,EAAK4C,YACxC8B,EAAG7B,OAASjD,EAAO+E,YAAY3E,EAAK6C,QACpC6B,EAAG5B,OAASlD,EAAO+E,YAAY3E,EAAK8C,QACpC4B,EAAGf,cAAgB3D,EAAK2D,cACjBe,MA1IX,MCfME,EAAc,IACdC,EAAS,IACTC,EAAQ,IACRC,EAAa,GACbC,EAAkB,GAClBC,EAAM,IACNC,E,WACJ,WAAYC,EAAIC,GAAQ,IAAD,gCAoBvBC,OAAO,SAACC,EAAMC,EAAYC,GAKxB,EAAKC,KAAM,EACX,EAAKC,SAAW,EAAKC,SACrB,EAAKD,QAAUhF,KAAKkF,IAAI,EAAE,EAAKF,SAC/B,EAAKzD,GAAK,EAAKyD,QACZ,EAAKzD,EAAE,EACR,EAAKA,EAAI,EAEH,EAAKA,EAAI4C,IACf,EAAK5C,EAAI4C,GAGX,EAAKgB,MAAMP,EAAMC,EAAYC,IApCR,KAsCvBK,MAAQ,SAACP,EAAMC,EAAYC,GAOzB,IAAMrC,EAAS,CACbzC,KAAKoF,KAAK,EAAK/D,EAAIuD,GAASR,GAC5BS,EAAYV,EACZW,EAAUX,EACV,EAAK5C,EAAE4C,EACP,EAAKa,QAAQ,GAETjC,EAAS,EAAK2B,MAAMW,QAAQ5C,GAC/BM,EAAO,GAAGA,EAAO,IAClB,EAAKuC,QAtDc,KAyDvBC,OAAS,WACP,EAAKb,MAAMa,QAAO,SAAClE,GACjB,OAAGrB,KAAKC,SAAS,GAERoB,EADwB,GAAhBrB,KAAKC,SAGfoB,MA/DY,KAkEvBiE,KAAK,WACH,EAAKN,SAAW,GAlEhB3F,KAAKoF,IAAMA,EACXpF,KAAKgC,EAAE,IACPhC,KAAKkC,EAAE,IACPlC,KAAK2F,QAAU,EACf3F,KAAK4F,SAAW,GAChB5F,KAAKmG,QAAS,EACdnG,KAAK0F,IAAM,EACX1F,KAAKoG,QAAU,EACZf,GACDrF,KAAKqF,MAAQA,EAAMzC,OACnB5C,KAAKkG,UAELlG,KAAKqF,MAAQ,IAAIlD,EAAc,EAAE,EAAE,G,iDAGlCiD,GACH,IAAIiB,EAAMC,SAASC,eAAe,SAClCvG,KAAKoF,IAAIoB,UAAUH,EAAKrG,KAAKgC,EAAGhC,KAAKkC,EAAE,GAAG,Q,KAoDxCuE,E,WACJ,WAAYrB,EAAIsB,EAAOC,GAAQ,IAAD,gCAe9BrB,OAAO,WACL,EAAKtD,GAAK,EACN,EAAKA,EAAIgD,EAAY,IACvB,EAAKmB,QAAS,IAjBhBnG,KAAKoF,IAAMA,EACXpF,KAAKmG,QAAS,EACdnG,KAAKgC,EAAE+C,EACP/E,KAAKkC,EAAEwE,EAAS5B,EAAS4B,EAAS,EAClC1G,KAAK4G,MAAQ5B,EACbhF,KAAK0G,OAASA,GAAUzB,EAAiBtE,KAAKC,UAAYkE,EAAS6B,EAA0B,EAAlB1B,G,iDAExEG,GAGHpF,KAAKoF,IAAIyB,SAAS7G,KAAKgC,EAAEhC,KAAKkC,EAAElC,KAAK4G,MAAM5G,KAAK0G,QAChD1G,KAAKoF,IAAI0B,UAAU,c,KAkKRC,E,YArJb,WAAYC,GAAO,IAAD,8BAClB,4CAAMA,KAkBRC,UAAU,WACR,IAAM7B,EAAM,EAAK8B,UAAUC,QAAQC,WAAW,MAC9C,EAAKC,WAAa,EAClBC,cAAc,EAAKC,MACnBnC,EAAIoC,UAAU,EAAE,EAAEzC,EAAMD,GACxB,EAAK2C,MAAQ,EAAKC,gBAClB,EAAKC,MAAQ,EAAKC,gBAClB,EAAKC,UAAY,GACjB,EAAKN,KAAOO,YAAY,EAAKC,SAAU,IAAO,EAAKC,MAAMC,YA3BvC,EA6BlBC,UAAY,SAACxH,GACG,UAAXA,EAAEyH,MACH,EAAKR,MAAM,GAAG1B,QA/BA,EAkClBmC,OAAS,kBAAM,EAAKlB,UAAUC,QAAQC,WAAW,OAlC/B,EAmClBM,cAAc,WACd,IAAMtC,EAAM,EAAKgD,SACXC,EAAY,IAAI5B,EAAKrB,EAAI,KAAK,EAAKuB,OACnC2B,EAAmBxD,EAASuD,EAAU3B,OAAS,EAAKC,MAE1D,MAAO,CAAC0B,EADW,IAAI5B,EAAKrB,EAAIkD,EAAiB,MAvC/B,EA0ClBV,cAAgB,WAGZ,IAFF,IAAMD,EAAQ,GACNvC,EAAM,EAAKgD,SACR9H,EAAI,EAAGA,EAAIuE,EAAavE,IAAI,CACnC,IAAM+E,EAAQ,EAAKwC,UAAUxG,QAAU,EAAKkH,UAAUlD,MAChDmD,EAAU,IAAIrD,EAAKC,EAAIC,GAC7BsC,EAAMlH,KAAK+H,GAEb,OAAOb,GAlDO,EAoDpBI,SAAS,WAEP,EAAKzC,SACL,EAAKmD,QAvDa,EA0DpBnD,OAAO,WAAK,IAAD,EAEP,GADA,EAAK+B,WAAa,EAAKA,WAAa,EACjC,EAAKA,WAAa,MAAQ,EAAE,CAAC,IAAD,EACvBI,EAAQ,EAAKC,iBACnB,IAAKD,OAAMhH,KAAX,oBAAmBgH,IAgBrB,GAbA,EAAKA,MAAMiB,SAAQ,SAAAC,GAAI,OAAIA,EAAKrD,YAEhC,EAAKqC,MAAMe,SAAQ,SAAAE,GACjB,IAAMC,EAAW,EAAKC,YAAYF,GAC5BpD,EAAcqD,EAAS3G,EAAI2G,EAASnC,OAC1CkC,EAAKtD,OAAOuD,EAAS7G,EAAEwD,EAAYA,EAAY,EAAKmB,UAGtD,EAAKc,MAAQ,EAAKA,MAAMsB,QAAO,SAAAJ,GAAI,OAAKA,EAAKxC,UAE7C,EAAK6C,uBACL,IAAKnB,WAAUpH,KAAf,oBAAuB,EAAKkH,MAAMoB,QAAO,SAAAH,GAAI,OAAIA,EAAKzC,YACtD,EAAKwB,MAAQ,EAAKA,MAAMoB,QAAO,SAAAH,GAAI,OAAKA,EAAKzC,UACpB,IAAtB,EAAKwB,MAAMtG,OAAa,CACzB,IAAI4H,EAAW,EAEf,EAAKpB,UAAUa,SAAQ,SAAAQ,GAAaD,GAAYC,EAASxD,OAEzD,EAAKmC,UAAUa,SAAQ,SAAAQ,GAAaA,EAAS9C,QAAU8C,EAASxD,IAAMuD,KACtE,EAAKhC,cApFS,EAuFhBsB,QAAU,WAGR,IAFA,IAAIY,EAAQ,EACRC,EAAIzI,KAAKC,SACPwI,EAAI,GACRA,GAAK,EAAKvB,UAAUsB,GAAO/C,QAC3B+C,GAAS,EAGX,OADAA,GAAS,EACF,EAAKtB,UAAUsB,IA/FR,EAuGhBL,YAAc,SAACF,GACb,IAAI,IAAItI,EAAE,EAAEA,EAAE,EAAKmH,MAAMpG,OAAOf,IAC9B,GAAI,EAAKmH,MAAMnH,GAAG0B,EAAI4G,EAAK5G,EACzB,OAAO,EAAKyF,MAAMnH,IA1GR,EAgHpB0I,oBAAsB,WAEpB,EAAKrB,MAAMe,SAAQ,SAAAE,GACjB,EAAKnB,MAAMiB,SAAQ,SAAAC,IAEfC,EAAK1G,GAAK,GAAK0G,EAAK1G,GAAK4C,GACzB8D,EAAK5G,GAAK2G,EAAK3G,GAAK4G,EAAK5G,GAAK2G,EAAK3G,EAAI2G,EAAK/B,OAC5CgC,EAAK1G,GAAKyG,EAAKzG,GAAK0G,EAAK1G,GAAKyG,EAAKzG,EAAIyG,EAAKjC,UAE5CkC,EAAKzC,QAAS,UAvHpB,EAAKe,UAAUmC,IAAMC,YACrB,EAAKjC,WAAa,EAClB,EAAKV,MAAQ,IACb,EAAKc,MAAQ,GACb,EAAKE,MAAQ,GACb,EAAKE,UAAY,GACjB,EAAKG,MAAQ,CACXC,UAAY/C,GATI,E,iFAiBlBlF,KAAKiH,c,6BA8GOjH,KAAKkH,UAAUC,QAAQC,WAAW,MAC1CI,UAAU,EAAE,EAAEzC,EAAMD,GACxB9E,KAAKyH,MAAMiB,SAAQ,SAAAC,GAAI,OAAIA,EAAKF,UAChCzI,KAAK2H,MAAMe,SAAQ,SAAAE,GAAI,OAAIA,EAAKH,Y,gEAMhC,OACE,yBAAKc,UAAU,OACb,4BAAQC,IAAKxJ,KAAKkH,UAAWN,MAAM,MAAMF,OAAO,MAChD+C,MAAO,CAACC,UAAU,OAAOC,OAAO,uBAEhC,8BAEA,yBAAKC,GAAG,QAAQhD,MAAM,IAAIF,OAAO,IAAImD,IAAI,iF,GAhJ7BC,aC9FEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS/D,SAASC,eAAe,SD6H3C,kBAAmB+D,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e13712c8.chunk.js","sourcesContent":["export class Matrix {\n  constructor(rows, cols) {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = Array(this.rows).fill().map(() => Array(this.cols).fill(0));\n  }\n\n  copy() {\n    let m = new Matrix(this.rows, this.cols);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        m.data[i][j] = this.data[i][j];\n      }\n    }\n    return m;\n  }\n\n  static fromArray(arr) {\n    return new Matrix(arr.length, 1).map((e, i) => arr[i]);\n  }\n\n  static subtract(a, b) {\n    if (a.rows !== b.rows || a.cols !== b.cols) {\n      console.log('Columns and Rows of A must match Columns and Rows of B.');\n      return;\n    }\n\n    // Return a new Matrix a-b\n    return new Matrix(a.rows, a.cols)\n      .map((_, i, j) => a.data[i][j] - b.data[i][j]);\n  }\n\n  toArray() {\n    let arr = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        arr.push(this.data[i][j]);\n      }\n    }\n    return arr;\n  }\n\n  randomize() {\n    return this.map(e => Math.random() * 2 - 1);\n  }\n\n  add(n) {\n    if (n instanceof Matrix) {\n      if (this.rows !== n.rows || this.cols !== n.cols) {\n        console.log('Columns and Rows of A must match Columns and Rows of B.');\n        return;\n      }\n      return this.map((e, i, j) => e + n.data[i][j]);\n    } else {\n      return this.map(e => e + n);\n    }\n  }\n\n  static transpose(matrix) {\n    return new Matrix(matrix.cols, matrix.rows)\n      .map((_, i, j) => matrix.data[j][i]);\n  }\n\n  static multiply(a, b) {\n    // Matrix product\n    if (a.cols !== b.rows) {\n      console.log('Columns of A must match rows of B.');\n      return;\n    }\n\n    return new Matrix(a.rows, b.cols)\n      .map((e, i, j) => {\n        // Dot product of values in col\n        let sum = 0;\n        for (let k = 0; k < a.cols; k++) {\n          sum += a.data[i][k] * b.data[k][j];\n        }\n        return sum;\n      });\n  }\n\n  multiply(n) {\n    if (n instanceof Matrix) {\n      if (this.rows !== n.rows || this.cols !== n.cols) {\n        console.log('Columns and Rows of A must match Columns and Rows of B.');\n        return;\n      }\n\n      // hadamard product\n      return this.map((e, i, j) => e * n.data[i][j]);\n    } else {\n      // Scalar product\n      return this.map(e => e * n);\n    }\n  }\n\n  map(func) {\n    // Apply a function to every element of matrix\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let val = this.data[i][j];\n        this.data[i][j] = func(val, i, j);\n      }\n    }\n    return this;\n  }\n\n  static map(matrix, func) {\n    // Apply a function to every element of matrix\n    return new Matrix(matrix.rows, matrix.cols)\n      .map((e, i, j) => func(matrix.data[i][j], i, j));\n  }\n\n  print() {\n    console.table(this.data);\n    return this;\n  }\n\n  serialize() {\n    return JSON.stringify(this);\n  }\n\n  static deserialize(data) {\n    if (typeof data == 'string') {\n      data = JSON.parse(data);\n    }\n    let matrix = new Matrix(data.rows, data.cols);\n    matrix.data = data.data;\n    return matrix;\n  }\n}\n","import {Matrix} from './matrix';\nclass ActivationFunction {\n  constructor(func, dfunc) {\n    this.func = func;\n    this.dfunc = dfunc;\n  }\n}\n\nlet sigmoid = new ActivationFunction(\n  x => 1 / (1 + Math.exp(-x)),\n  y => y * (1 - y)\n);\n\nlet tanh = new ActivationFunction(\n  x => Math.tanh(x),\n  y => 1 - (y * y)\n);\n\n\nexport class NeuralNetwork {\n  /*\n  * if first argument is a NeuralNetwork the constructor clones it\n  * USAGE: cloned_nn = new NeuralNetwork(to_clone_nn);\n  */\n  constructor(in_nodes, hid_nodes, out_nodes) {\n    if (in_nodes instanceof NeuralNetwork) {\n      let a = in_nodes;\n      this.input_nodes = a.input_nodes;\n      this.hidden_nodes = a.hidden_nodes;\n      this.output_nodes = a.output_nodes;\n\n      this.weights_ih = a.weights_ih.copy();\n      this.weights_ho = a.weights_ho.copy();\n\n      this.bias_h = a.bias_h.copy();\n      this.bias_o = a.bias_o.copy();\n    } else {\n      this.input_nodes = in_nodes;\n      this.hidden_nodes = hid_nodes;\n      this.output_nodes = out_nodes;\n\n      this.weights_ih = new Matrix(this.hidden_nodes, this.input_nodes);\n      this.weights_ho = new Matrix(this.output_nodes, this.hidden_nodes);\n      this.weights_ih.randomize();\n      this.weights_ho.randomize();\n\n      this.bias_h = new Matrix(this.hidden_nodes, 1);\n      this.bias_o = new Matrix(this.output_nodes, 1);\n      this.bias_h.randomize();\n      this.bias_o.randomize();\n    }\n\n    // TODO: copy these as well\n    this.setLearningRate();\n    this.setActivationFunction();\n\n\n  }\n\n  predict(input_array) {\n\n    // Generating the Hidden Outputs\n    let inputs = Matrix.fromArray(input_array);\n    let hidden = Matrix.multiply(this.weights_ih, inputs);\n    hidden.add(this.bias_h);\n    // activation function!\n    hidden.map(this.activation_function.func);\n\n    // Generating the output's output!\n    let output = Matrix.multiply(this.weights_ho, hidden);\n    output.add(this.bias_o);\n    output.map(this.activation_function.func);\n\n    // Sending back to the caller!\n    return output.toArray();\n  }\n\n  setLearningRate(learning_rate = 0.1) {\n    this.learning_rate = learning_rate;\n  }\n\n  setActivationFunction(func = sigmoid) {\n    this.activation_function = func;\n  }\n\n  train(input_array, target_array) {\n    // Generating the Hidden Outputs\n    let inputs = Matrix.fromArray(input_array);\n    let hidden = Matrix.multiply(this.weights_ih, inputs);\n    hidden.add(this.bias_h);\n    // activation function!\n    hidden.map(this.activation_function.func);\n\n    // Generating the output's output!\n    let outputs = Matrix.multiply(this.weights_ho, hidden);\n    outputs.add(this.bias_o);\n    outputs.map(this.activation_function.func);\n\n    // Convert array to matrix object\n    let targets = Matrix.fromArray(target_array);\n\n    // Calculate the error\n    // ERROR = TARGETS - OUTPUTS\n    let output_errors = Matrix.subtract(targets, outputs);\n\n    // let gradient = outputs * (1 - outputs);\n    // Calculate gradient\n    let gradients = Matrix.map(outputs, this.activation_function.dfunc);\n    gradients.multiply(output_errors);\n    gradients.multiply(this.learning_rate);\n\n\n    // Calculate deltas\n    let hidden_T = Matrix.transpose(hidden);\n    let weight_ho_deltas = Matrix.multiply(gradients, hidden_T);\n\n    // Adjust the weights by deltas\n    this.weights_ho.add(weight_ho_deltas);\n    // Adjust the bias by its deltas (which is just the gradients)\n    this.bias_o.add(gradients);\n\n    // Calculate the hidden layer errors\n    let who_t = Matrix.transpose(this.weights_ho);\n    let hidden_errors = Matrix.multiply(who_t, output_errors);\n\n    // Calculate hidden gradient\n    let hidden_gradient = Matrix.map(hidden, this.activation_function.dfunc);\n    hidden_gradient.multiply(hidden_errors);\n    hidden_gradient.multiply(this.learning_rate);\n\n    // Calcuate input->hidden deltas\n    let inputs_T = Matrix.transpose(inputs);\n    let weight_ih_deltas = Matrix.multiply(hidden_gradient, inputs_T);\n\n    this.weights_ih.add(weight_ih_deltas);\n    // Adjust the bias by its deltas (which is just the gradients)\n    this.bias_h.add(hidden_gradient);\n\n    // outputs.print();\n    // targets.print();\n    // error.print();\n  }\n\n  serialize() {\n    return JSON.stringify(this);\n  }\n\n  static deserialize(data) {\n    if (typeof data == 'string') {\n      data = JSON.parse(data);\n    }\n    let nn = new NeuralNetwork(data.input_nodes, data.hidden_nodes, data.output_nodes);\n    nn.weights_ih = Matrix.deserialize(data.weights_ih);\n    nn.weights_ho = Matrix.deserialize(data.weights_ho);\n    nn.bias_h = Matrix.deserialize(data.bias_h);\n    nn.bias_o = Matrix.deserialize(data.bias_o);\n    nn.learning_rate = data.learning_rate;\n    return nn;\n  }\n\n\n  // Adding function for neuro-evolution\n  copy() {\n    return new NeuralNetwork(this);\n  }\n\n  // Accept an arbitrary function for mutation\n  mutate(func) {\n    this.weights_ih.map(func);\n    this.weights_ho.map(func);\n    this.bias_h.map(func);\n    this.bias_o.map(func);\n  }\n\n\n\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {NeuralNetwork} from './neural/nn';\n\nconst TOTAL_BIRDS = 500;\nconst HEIGHT = 500;\nconst WIDTH = 800;\nconst PIPE_WIDTH = 35;\nconst MIN_PIPE_HEIGHT = 40;\nconst FPS = 240;\nclass Bird{\n  constructor(ctx,brain) {\n    this.ctx = ctx;\n    this.x=150;\n    this.y=150;\n    this.gravity = 0;\n    this.velocity = 0.1;\n    this.isDead = false;\n    this.age = 0;\n    this.fitness = 0;\n    if(brain){\n      this.brain = brain.copy();\n      this.mutate();\n    } else {\n      this.brain = new NeuralNetwork(5,2,2);\n    }\n  }\n  draw(ctx){\n    var img = document.getElementById(\"image\");\n    this.ctx.drawImage(img, this.x, this.y,15,15);\n  }\n  update=(pipeX,spaceStartY,spaceEndY)=>{\n    /*this.velocity += this.gravity;\n    if(this.velocity>1){\n      this.velocity = 1;\n    }*/\n    this.age +=1;\n    this.gravity += this.velocity;\n    this.gravity = Math.min(4,this.gravity);\n    this.y += this.gravity;\n    if(this.y<0){\n      this.y = 0;\n    }\n    else if(this.y > HEIGHT){\n      this.y = HEIGHT;\n\n    };\n    this.think(pipeX,spaceStartY,spaceEndY);\n  }\n  think = (pipeX,spaceStartY,spaceEndY) => {\n    /*\n    inputs:\n    [bird.x,bird.y]\n    [closestPipe.x,pipe.y]\n    [closestPipe.x, pipe.y+pipe.height]\n    */\n    const inputs = [\n      Math.abs((this.x - pipeX) / WIDTH),\n      spaceStartY/HEIGHT,\n      spaceEndY/HEIGHT,\n      this.y/HEIGHT,\n      this.gravity/4\n    ];\n    const output = this.brain.predict(inputs);\n    if(output[0]<output[1]){\n      this.jump();\n    }\n  }\n  mutate = () => {\n    this.brain.mutate((x)=>{\n      if(Math.random()<0.2){\n        const offset = Math.random() * 0.5;\n        return x + offset;\n      }\n      return x;\n    });\n  }\n  jump=()=>{\n    this.gravity = -4;\n  }\n}\nclass Pipe {\n  constructor(ctx,height,space) {\n    this.ctx = ctx;\n    this.isDead = false;\n    this.x=WIDTH;\n    this.y=height ? HEIGHT - height : 0;\n    this.width = PIPE_WIDTH;\n    this.height = height || MIN_PIPE_HEIGHT +Math.random() * (HEIGHT - space - MIN_PIPE_HEIGHT * 2);\n  }\n  draw(ctx){\n    const space = 80;\n\n    this.ctx.fillRect(this.x,this.y,this.width,this.height);\n    this.ctx.fillStyle='#00c400';\n  //  this.ctx.fillRect(50,firstPipeHeight+space,PIPE_WIDTH,secondPipeHeight);\n  }\n  update=()=>{\n    this.x -= 1;\n    if((this.x + PIPE_WIDTH)<0){\n      this.isDead = true;\n\n    }\n  }\n}\n\nclass App extends Component{\n  constructor(props){\n  super(props);\n  this.canvasRef=React.createRef();\n  this.frameCount = 0;\n  this.space = 120;\n  this.pipes = [];\n  this.birds = [];\n  this.deadBirds = [];\n  this.state = {\n    gameSpeed : FPS\n  };\n}\n\ncomponentDidMount(){\n  //document.addEventListener('keydown',this.onKeyDown);\n  //const ctx = this.getCtx();\n\n  this.startGame();\n}\nstartGame=()=>{\n  const ctx = this.canvasRef.current.getContext('2d');\n  this.frameCount = 0;\n  clearInterval(this.loop);\n  ctx.clearRect(0,0,WIDTH,HEIGHT);\n  this.pipes = this.generatePipes();\n  this.birds = this.generateBirds();\n  this.deadBirds = [];\n  this.loop = setInterval(this.gameloop, 1000 / this.state.gameSpeed);\n}\n  onKeyDown = (e) =>{\n    if(e.code === 'Space'){\n      this.birds[0].jump();\n    }\n  }\n  getCtx = () => this.canvasRef.current.getContext('2d');\n  generatePipes=()=>{\n  const ctx = this.getCtx();\n  const firstPipe = new Pipe(ctx,null,this.space);\n  const secondPipeHeight = HEIGHT - firstPipe.height - this.space;\n  const secondPipe = new Pipe(ctx,secondPipeHeight,80);\n  return [firstPipe,secondPipe];\n}\n  generateBirds = () => {\n    const birds = [];\n      const ctx = this.getCtx();\n      for (let i = 0; i < TOTAL_BIRDS; i++){\n        const brain = this.deadBirds.length && this.pickOne().brain;\n        const newBird = new Bird(ctx,brain);\n        birds.push(newBird);\n      }\n      return birds;\n  }\ngameloop=()=>{\n\n  this.update();\n  this.draw();\n\n}\nupdate=()=>{\n    this.frameCount = this.frameCount + 1;\n    if(this.frameCount % 240 === 0){\n      const pipes = this.generatePipes();\n      this.pipes.push(...pipes);\n    }\n    //update pipe positions\n    this.pipes.forEach(pipe => pipe.update());\n    //update bird positions\n    this.birds.forEach(bird => {\n      const nextPipe = this.getNextPipe(bird);\n      const spaceStartY = nextPipe.y + nextPipe.height;\n      bird.update(nextPipe.x,spaceStartY,spaceStartY+this.space)\n    });\n    //delete unused pipes\n    this.pipes = this.pipes.filter(pipe => !pipe.isDead);\n    //delete dead birds\n    this.updateBirdDeadState();\n    this.deadBirds.push(...this.birds.filter(bird => bird.isDead));//ölü kuşları aldım.\n    this.birds = this.birds.filter(bird => !bird.isDead);// hayatta kalan kuşları al ölmemiş olanlar ile devam et\n    if(this.birds.length === 0){\n      let totalAge = 0;\n      //calculata cumulative age\n      this.deadBirds.forEach(deadBird => {totalAge += deadBird.age});\n      //calculate fitness ratio\n      this.deadBirds.forEach(deadBird => {deadBird.fitness = deadBird.age / totalAge});\n      this.startGame();\n    }\n    }\n    pickOne = () => {\n      let index = 0;\n      let r = Math.random();\n      while(r > 0) {\n        r -= this.deadBirds[index].fitness;\n        index += 1;\n      }\n      index -= 1;\n      return this.deadBirds[index];\n\n\n    /*if(this.isGameOver()){\n      alert('GAME OVER');\n      clearInterval(this.loop);\n    }*/\n  }\n    getNextPipe = (bird) =>{\n      for(var i=0;i<this.pipes.length;i++){\n        if (this.pipes[i].x > bird.x){\n          return this.pipes[i];\n        }\n      }\n      return;\n    }\n\nupdateBirdDeadState = () => {\n  //detect collisions\n  this.birds.forEach(bird => {\n    this.pipes.forEach(pipe => {\n      if(\n        bird.y <= 0 || bird.y >= HEIGHT ||(\n        bird.x >= pipe.x && bird.x <= pipe.x + pipe.width &&\n        bird.y >= pipe.y && bird.y <= pipe.y + pipe.height)\n      ) {\n        bird.isDead = true;\n      }\n    });\n  });\n}\ndraw(){\n  const ctx = this.canvasRef.current.getContext('2d');\n  ctx.clearRect(0,0,WIDTH,HEIGHT);\n  this.pipes.forEach(pipe => pipe.draw());\n  this.birds.forEach(bird => bird.draw());\n}\nreset () {\n\n}\nrender(){\n  return (\n    <div className=\"App\">\n      <canvas ref={this.canvasRef} width=\"800\" height=\"500\"\n      style={{marginTop:'24px',border:'1px solid #c3c3c3'}}>\n      </canvas>\n      <div>\n      </div>\n      <img id=\"image\" width=\"0\" height=\"0\" src=\"https://tr.seaicons.com/wp-content/uploads/2017/03/Bird-yellow-icon.png\"></img>\n    </div>\n\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}